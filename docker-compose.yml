version: '3.7'

x-backend: &backend
  build:
    context: ./docker/php
    dockerfile: Dockerfile
    args:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
  restart: always
  env_file: .env
  volumes:
    - ./application:/application
  depends_on:
    postgres:
      condition: service_healthy

services:
  web:
    image: nginx:latest
    restart: always
    ports:
      - '${WWW_PORT}:80'
    volumes:
      - ./application:/application
      - ./docker/nginx/crypto.conf:/etc/nginx/conf.d/default.conf
      #- ./docker/nginx/ssl/crypto.home.crt:/etc/nginx/conf.d/crypto.home.crt
      #- ./docker/nginx/ssl/crypto.home.key:/etc/nginx/conf.d/crypto.home.key

  backend:
    <<: *backend
    command: sh -c "/docker-entrypoint.d/custom-entrypoint.sh && php-fpm"

  job:
    <<: *backend
    command: sh -c "php artisan queue:work --tries=1 --memory=50 --timeout=3600"

  schedule:
    <<: *backend
    command: sh -c "php /application/artisan schedule:work"

  postgres:
    build: docker/postgres
    restart: always
    healthcheck:
      test: "pg_isready"
      start_period: 1s
      interval: 2s
      timeout: 30s
      retries: 100
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
